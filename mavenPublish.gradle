apply plugin: 'signing'

configurations {
    samples { extendsFrom runtime}
    jdk
    maven { extendsFrom archives }
    published { extendsFrom archives, signatures}
}

signing {
    required = { gradle.taskGraph.hasTask(uploadPublished) && !version.endsWith("SNAPSHOT") }
    sign configurations.archives
}

repositories {
    maven { url 'https://oss.sonatype.org/content/groups/staging' }
    mavenCentral()
}

uploadPublished {

    doFirst {
        // configure repositories in a doFirst so we can late bind the properties
        checkPasswords()
        repositories {
            mavenDeployer {
                configurePOM(pom)
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                    authentication userName: sonatypeUsername, password: sonatypePassword
                }
                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication userName: sonatypeUsername, password: sonatypePassword
                }
            }
        }
    }
    configuration = configurations.published
}

install {
    doFirst {
        configurePOM(repositories.mavenInstaller.pom)
    }
    configuration = configurations.published
}

private configurePOM(def pom) {
    pom.project {
        name "Gluon CloudLink Enterprise SDK - ${project.name}"
        description "Gluon CloudLink Enterprise SDK - ${project.name}"
        url 'https://gluonhq.com/cloudlink'
        modelVersion '4.0.0'
        packaging 'jar'
        scm {
            connection 'scm:git:https://github.com/gluonhq/cloudlink-enterprise-sdk.git'
            developerConnection 'scm:git:https://github.com/gluonhq/cloudlink-enterprise-sdk.git'
            url 'https://github.com/gluonhq/cloudlink-enterprise-sdk'
        }
        organization {
            name 'Gluon'
            url 'https://gluonhq.com'
        }
        developers {
            developer {

            }
        }
        licenses {
            license {
                name 'The 3-Clause BSD License'
                url 'http://www.opensource.org/licenses/bsd-license.php'
                distribution 'repo'
            }
        }
    }
}

ext.checkPasswords =  {
    if (!project.hasProperty('sonatypeUsername') || !project.hasProperty('sonatypePassword')) {
        println "Please provide sonatypeUsername and sonatypePassword as gradle properties when uploading artifacts."
        throw new StopExecutionException()
    }
}