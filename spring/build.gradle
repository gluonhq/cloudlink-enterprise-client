buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath 'gradle.plugin.nl.javadude.gradle.plugins:license-gradle-plugin:0.14.0'
    }
}

apply plugin: 'java'
apply plugin: 'maven'
apply from: rootProject.file('../mavenPublish.gradle')
apply from: rootProject.file('../gradle/code-quality.gradle')

sourceCompatibility = 1.8

group = 'com.gluonhq'
version = '1.2.0-SNAPSHOT'

archivesBaseName = 'cloudlink-enterprise-sdk-spring'

repositories {
    jcenter()
    maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots/'
    }
}

configurations {
    javadocSources
}

dependencies {
    compile 'com.gluonhq:cloudlink-enterprise-sdk-javabase:1.1.0'

    compile 'io.github.openfeign:feign-core:9.4.0'
    compile 'io.github.openfeign:feign-gson:9.4.0'
    compile 'io.github.openfeign:feign-jaxrs:9.4.0'
    compile 'io.github.openfeign:feign-okhttp:9.4.0'
    compile 'io.github.openfeign.form:feign-form:2.1.0'

    compile 'org.springframework:spring-web:4.3.8.RELEASE'
    compile 'org.springframework.boot:spring-boot-autoconfigure:1.5.3.RELEASE'

    testCompile 'junit:junit:4.12'
    testCompile 'io.vertx:vertx-core:3.4.1'
    testRuntime 'org.hibernate.validator:hibernate-validator:6.0.0.Beta2'
    testRuntime 'org.glassfish:javax.el:3.0.1-b08'

    javadocSources 'com.gluonhq:cloudlink-enterprise-sdk-javabase:1.1.0:sources'
}

task unpackJavadocSources(type: Copy) {
    into file("${buildDir}/unpacked/javadocSources")
    from configurations.javadocSources.collect {
        zipTree(it)
    }
}

javadoc {
    source fileTree(project.unpackJavadocSources.destinationDir).include('**/*.java')
    title "Gluon CloudLink Enterprise SDK for Spring ${version} API"
    exclude('com/gluonhq/impl/**/*')
}
javadoc.dependsOn tasks.unpackJavadocSources

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    classifier = 'javadoc'
}

artifacts {
    archives sourcesJar, javadocJar
}
